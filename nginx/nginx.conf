upstream app_server {
  server web_thunder:8812;
  keepalive 32;
}

server {
  listen 80; 
  listen [::]:80; # changes
  server_name picai.online; # changes
  server_tokens off;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  return 301 https://$host$request_uri;

}

server {

    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name picai.online;
    server_tokens off;
    ssl on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains"; # changes

    
    # changes
    root /www/data/;
    client_max_body_size 64M;
    #########
    

    ssl_certificate /etc/letsencrypt/live/picai.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/picai.online/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    ##################  changes ################
    #ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    #ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
    #############################################

    location / {
        proxy_read_timeout 300s; # changes

        #proxy_pass  http://picai.online;
        #proxy_pass   http://0.0.0.0:80;
        proxy_pass   http://app_server;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
      root /usr/share/nginx/html;
    }


}